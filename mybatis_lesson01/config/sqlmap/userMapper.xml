<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
"mybatis-3-mapper.dtd">

<!-- namespace命名空间，作用是对SQL进行分类化管理，SQL隔离 -->
<mapper namespace="test">
	<!-- 在映射文件中配置很多SQL语句 -->
	<!-- 通过select执行数据库查询 
		id：            标识映射文件的SQL，将SQL语句封装到mapperedStatement对象中，所以将id称为Statement的id
		parameterType:指定输入参数的类型，这里指定int类型
		resultType:    指定SQL输出结果所映射的Java类型，select指定resultType表示将单条记录映射成Java对象
		#{id}:          标识占位符，表示？。其中的id表示接收输入的参数名称，如果输入参数是简单类型，则参数名可以任意
	-->
	<select id="findUserById" parameterType="int" resultType="cn.jason.mybatis.entity.User">
		SELECT * FROM t_user WHERE id = #{id}
	</select>
		
	<!-- 根据用户名模糊查询用户信息，可能返回多条 
	resultType:	指定的是单条记录所映射的java对象类型
	${}：		    表示拼接sql串，将接收到的内容不加任何修饰拼接在sql中
			    使用${}拼接sql，容易引起sql注入，如：'OR 1=1 OR'
	${value}:	    接收输入参数的内容，如果传入类型是简单类型，${}中只能为value
	-->
	<select id="findUserList" parameterType="java.lang.String" resultType="cn.jason.mybatis.entity.User">
		SELECT * FROM t_user WHERE username LIKE '%${value}%'
	</select>
	
	<!-- 添加用户 -->		
	<!-- 
	parameterType:	指定输入参数类型是pojo(包括用户信息)
	#{}中指定pojo的属性名，接收对象的属性值，mybatis通过OGNL获得对象的属性值
	这里的VALUES也可写作VALUE
	 -->
	<insert id="insertUser" parameterType="cn.jason.mybatis.entity.User">
		<!-- 将插入数据的主键返回到user对象中
		SELECT LAST_INSERT_ID()	：得到刚insert的记录的主键值，只适用于自增主键
		keyProperty：  将查询到的主键值设置到parameterType指定对象的属性
		order：		    该函数的相对于insert语句的执行顺序
		resultType：	指定该函数返回结果类型	
		 -->
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO t_user(id, username, birthday, sex, address) VALUES(#{id}, #{username}, #{birthday}, #{sex}, #{address})
	</insert>

	<update id="updateUserById" parameterType="cn.jason.mybatis.entity.User">
		UPDATE t_user
			SET username = #{username}, birthday = #{birthday}, sex = #{sex}, address = #{address}
		WHERE 
			id = #{id} 
	</update>
	
	<delete id="deleteUserById" parameterType="cn.jason.mybatis.entity.User">
		DELETE FROM t_user WHERE id = #{id}
	</delete>
	
</mapper>
